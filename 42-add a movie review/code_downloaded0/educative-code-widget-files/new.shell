#!/bin/bash.
clear
mongod > /dev/null 2>&1 &
sleep 5

go run main.go > /dev/null 2>&1 &

printf "\nServer starting...\n"

curl -s --location --request POST 'https://ed-4793220156096512.educative.run/reviews/addreview' \
--header 'token: ' \
 --data-raw ''  &> log.txt

while :
do
   if grep "Your app refused to connect." < log.txt > waste.txt; then
	   i=1
curl -s --location --request POST 'https://ed-4793220156096512.educative.run/reviews/addreview' \
--header 'token: ' \
 --data-raw ''  &> log.txt
   else
	break
   fi

done


printf "\nSending User Login Request\n"

printf "\ncurl -s --location --request POST 'https://ed-4793220156096512.educative.run/users/login' \
 --data-raw {
 Email:{{email}}, 
 Password:{{password}}
 }\n"


value=$(curl -s --location --request POST 'https://ed-4793220156096512.educative.run/users/login' \
 --data-raw '{
 "Email":"{{email}}", 
 "Password":"{{password}}"
 }') &> waste.txt

user_id=$(echo "$value" | jq '.ID')

reviewer_id=$(echo "$user_id" | sed -e 's/^"//' -e 's/"$//')
#echo $reviewer_id

token=$(echo "$value" | jq '.token')

token1=$(echo "$token" | sed -e 's/^"//' -e 's/"$//')

printf "\nSending Add a Review Request\n"

printf "\ncurl -s --location --request POST 'https://ed-4793220156096512.educative.run/reviews/addreview' \
--header token: $token1 \
--data-raw {
    review : {{review}},
    Movie_id : {{movie_id}},
    Reviewer_id : $reviewer_id
}\n"
curl -s --location --request POST 'https://ed-4793220156096512.educative.run/reviews/addreview' \
--header "token: $token1" \
--data-raw '{
    "review" : "{{review}}",
    "Movie_id" : {{movie_id}},
    "Review_id": {{review_id}},
    "Reviewer_id" : "'"$reviewer_id"'" 
}'   | jq


