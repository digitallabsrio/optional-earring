#!/bin/bash.
clear
mongod > /dev/null 2>&1 &
sleep 5

go run main.go > /dev/null 2>&1 &

printf "\nServer starting...\n"

curl -s --location --request GET 'https://ed-4793220156096512.educative.run/movies/{{movie_id}}' \
--header 'token: ' \
 --data-raw ''  &> log.txt

while :
do
   if grep "Your app refused to connect." < log.txt > waste.txt; then
	   i=1
curl -s --location --request GET 'https://ed-4793220156096512.educative.run/movies/{{movie_id}}' \
--header 'token: ' \
 --data-raw ''  &> log.txt
   else
	break
   fi

done


printf "\nSending User login Request\n"


printf "\ncurl -s --location --request POST https://ed-4793220156096512.educative.run/users/login \
 --data-raw {
 Email:{{email}}, 
 Password:{{password}}
 }\n"

value=$(curl -s --location --request POST 'https://ed-4793220156096512.educative.run/users/login' \
 --data-raw '{
 "Email":"{{email}}", 
 "Password":"{{password}}"
 }') &> waste.txt


token=$(echo "$value" | jq '.token')

token1=$(echo "$token" | sed -e 's/^"//' -e 's/"$//')

printf "\nSending Fetch One Movie Request\n"

printf "\ncurl -s --location --request GET 'https://ed-4793220156096512.educative.run/movies/{{movie_id}}' \
--header token: $token1 \
--data-raw '' \n"


curl -s --location --request GET 'https://ed-4793220156096512.educative.run/movies/{{movie_id}}' \
--header "token: $token1" \
--data-raw ''  | jq


